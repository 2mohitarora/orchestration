# Prepare for Ingress
# Now move to v3 folder and resubmit the jobs

# Once up and running try checking 
sudo resolvectl query web-svc.ingress.consul
sudo resolvectl query java-web-svc.ingress.consul

# Run nginx job in v3 folder so that it fronts the ingress
nomad job run -address=http://198.19.249.147:4646 -region=east nginx-elb.hcl
nomad job run -address=http://198.19.249.147:4646 -region=west nginx-elb.hcl

---------MESH GATEWAY STARTS HERE----------------------
# Ensure the primary datacenter has at least one running, registered mesh gateway with the service metadata key of {"consul-wan-federation":"1"} set.

# Talk about a situation when something doesn't exist in local cluster

- Once we have meshgateway enabled, delete java web app from east 
consul config write no-java-app-in-east.hcl

Check UI after that and see if nginx works

Delete the config and add the failover config 
consul config write java-web-svc-resolver.hcl

Check UI after that and see if nginx works

- Also try same thing for redis and see if it works, redis is TCP
consul config write no-redis-in-east.hcl
consul config write redis-svc-resolver.hcl

=========================================================================
Based on above results add FAILOVER SCENARIOS
=========================================================================
# Add east failover defaults (in a separate folder)
consul config write java-web-svc-resolver.hcl
consul config write nginx-resolver.hcl
consul config write redis-svc-resolver.hcl
consul config write web-svc-resolver.hcl
=========================================================================
# Add west failover (in a separate folder)
consul config write java-web-svc-resolver.hcl
consul config write nginx-resolver.hcl
consul config write redis-svc-resolver.hcl
consul config write web-svc-resolver.hcl
=========================================================================   

  